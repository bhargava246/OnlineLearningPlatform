2025-06-23 20:03:53,742 - semgrep.notifications - WARNING - METRICS: Using configs from the Registry (like --config=p/ci) reports pseudonymous rule metrics to semgrep.dev.
To disable Registry rule metrics, use "--metrics=off".
Using configs only from local files (like --config=xyz.yml) does not enable metrics.

More information: https://semgrep.dev/docs/metrics

2025-06-23 20:03:53,743 - semgrep.run_scan - DEBUG - semgrep version 1.4.0
2025-06-23 20:03:53,749 - semgrep.config_resolver - DEBUG - Loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-06-23 20:03:53,751 - semgrep.config_resolver - DEBUG - Done loading local config from /home/runner/workspace/.config/.semgrep/semgrep_rules.json
2025-06-23 20:03:53,755 - semgrep.config_resolver - DEBUG - Saving rules to /tmp/semgrep-_zne2mh5.rules
2025-06-23 20:03:54,446 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-06-23 20:03:54,447 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-06-23 20:03:54,447 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-06-23 20:03:54,447 - semgrep.config_resolver - DEBUG - loaded 1 configs in 0.6985678672790527
2025-06-23 20:03:54,573 - semgrep.run_scan - VERBOSE - running 714 rules from 1 config /home/runner/workspace/.config/.semgrep/semgrep_rules.json_0
2025-06-23 20:03:54,574 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-06-23 20:03:54,576 - semgrep.run_scan - VERBOSE - Rules:
2025-06-23 20:03:54,576 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-06-23 20:03:55,140 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-06-23 20:03:55,380 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-06-23 20:03:55,380 - semgrep.core_runner - DEBUG - /tmp/_MEIeUQ1Jy/semgrep/bin/opengrep-core -json -rules /tmp/tmp5_spl8lo.json -j 8 -targets /tmp/tmpcy0lb3ix -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
2025-06-23 20:04:07,500 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.07][[34mINFO[0m]: Executed as: /tmp/_MEIeUQ1Jy/semgrep/bin/opengrep-core -json -rules /tmp/tmp5_spl8lo.json -j 8 -targets /tmp/tmpcy0lb3ix -timeout 5 -timeout_threshold 3 -max_memory 0 -fast
[00.07][[34mINFO[0m]: Version: 1.4.0
[00.07][[34mINFO[0m]: Parsing rules in /tmp/tmp5_spl8lo.json
[00.56][[34mINFO[0m]: scan: processing 324 files (skipping 0), with 456 rules (skipping 0 )
[05.36][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/pgRoutes.ts func: ???]
[0m[05.94][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: client/src/pages/test-results.tsx func: TestResults:26631]
[0m[06.46][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.detect-non-literal-require file: server/routes/mongoRoutes.js func: ???]
[0m[07.49][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/pgRoutes.ts func: ???]
[0m[08.65][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.lang.security.audit.sqli.node-postgres-sqli file: client/src/components/admin/course-form.tsx func: CourseForm:37019]
[0m[08.89][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.require-request file: server/routes/pgRoutes.ts func: ???]
[0m[09.62][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.injection.raw-html-format file: server/routes/mongoRoutes.js func: ???]
[0m[10.49][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: config..semgrep.vendored-rules.javascript.express.security.x-frame-options-misconfiguration file: server/routes/mongoRoutes.js func: ???]
[0m--- end semgrep-core stderr ---
2025-06-23 20:04:07,507 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0ee74fd49637bebe183eca7188dbde26e386314e62cc2e7ba1ee60b377b638243fcd84e6c6fa04886198ccacfa6a711bfbcc61a28f9ddc913d5b3c53083cbc90_0
2025-06-23 20:04:07,508 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-06-23 20:04:07,508 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-06-23 20:04:07,509 - semgrep.rule_match - DEBUG - match_key = (' type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" (?is).*integrity= (google-analytics\\.com|fonts\\.googleapis\\.com|fonts\\.gstatic\\.com|googletagmanager\\.com) .*rel\\s*=\\s*[\'"]?preconnect.* href="... :// ..." href="//..." href=\'... :// ...\' href=\'//...\' src="... :// ..." src="//..." src=\'... :// ...\' src=\'//...\' <link  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" > <script  type="text/javascript" src="https://replit.com/public/js/replit-dev-banner.js" >...</script>', PosixPath('client/index.html'), 'config..semgrep.vendored-rules.html.security.audit.missing-integrity') match_id = 0728b64e224596592d04447ba8a642ff94e1fb9fcc07be26d49dc7e7f6898e638ad16ffcaca086932c58f4c6400fe32603323afef02cf9bfebcb0e4a53562a40_0
2025-06-23 20:04:07,510 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = f8f22e9033df0bc193af40b3efead28d03111a17667fbdd35e75b7598e89991ce4740472eb123f4d8c41179ac65c9acd7424f29d382da7f7e201ce8e1c3a97d3_0
2025-06-23 20:04:07,510 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign(token,JWT_SECRET,...);\n jwt.verify(token,JWT_SECRET,...);\n JWT_SECRET jwt.sign(token,"...",...);\n jwt.verify(token,"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5cad076f25fa6593e86a1e80460228a3f1e4804ed0bb1bde4241c24efb0be86972ee925d74395d1b98bb124ba8af9cbb20864fabef794354ef6de26ae45bf701_0
2025-06-23 20:04:07,511 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign(token,JWT_SECRET,...);\n jwt.verify(token,JWT_SECRET,...);\n JWT_SECRET jwt.sign(token,"...",...);\n jwt.verify(token,"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5cad076f25fa6593e86a1e80460228a3f1e4804ed0bb1bde4241c24efb0be86972ee925d74395d1b98bb124ba8af9cbb20864fabef794354ef6de26ae45bf701_0
2025-06-23 20:04:07,511 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign(token,JWT_SECRET,...);\n jwt.verify(token,JWT_SECRET,...);\n JWT_SECRET jwt.sign(token,"...",...);\n jwt.verify(token,"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5cad076f25fa6593e86a1e80460228a3f1e4804ed0bb1bde4241c24efb0be86972ee925d74395d1b98bb124ba8af9cbb20864fabef794354ef6de26ae45bf701_0
2025-06-23 20:04:07,512 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = f8f22e9033df0bc193af40b3efead28d03111a17667fbdd35e75b7598e89991ce4740472eb123f4d8c41179ac65c9acd7424f29d382da7f7e201ce8e1c3a97d3_0
2025-06-23 20:04:07,512 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign({id user._id username user.username role user.role},JWT_SECRET,...);\n jwt.verify({id user._id username user.username role user.role},JWT_SECRET,...);\n JWT_SECRET jwt.sign({id user._id username user.username role user.role},"...",...);\n jwt.verify({id user._id username user.username role user.role},"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5f29a9b5fd46bbef43d42747029dd2fa825030f05e33d1266ad5b87fc74f32b3b9fde9dbba44959ff8a767e27392e0e8f955e19f9ff20eae2fe17492d45b9568_0
2025-06-23 20:04:07,513 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign({id user._id username user.username role user.role},JWT_SECRET,...);\n jwt.verify({id user._id username user.username role user.role},JWT_SECRET,...);\n JWT_SECRET jwt.sign({id user._id username user.username role user.role},"...",...);\n jwt.verify({id user._id username user.username role user.role},"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5f29a9b5fd46bbef43d42747029dd2fa825030f05e33d1266ad5b87fc74f32b3b9fde9dbba44959ff8a767e27392e0e8f955e19f9ff20eae2fe17492d45b9568_0
2025-06-23 20:04:07,513 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign({id user._id username user.username role user.role},JWT_SECRET,...);\n jwt.verify({id user._id username user.username role user.role},JWT_SECRET,...);\n JWT_SECRET jwt.sign({id user._id username user.username role user.role},"...",...);\n jwt.verify({id user._id username user.username role user.role},"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5f29a9b5fd46bbef43d42747029dd2fa825030f05e33d1266ad5b87fc74f32b3b9fde9dbba44959ff8a767e27392e0e8f955e19f9ff20eae2fe17492d45b9568_0
2025-06-23 20:04:07,514 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = f8f22e9033df0bc193af40b3efead28d03111a17667fbdd35e75b7598e89991ce4740472eb123f4d8c41179ac65c9acd7424f29d382da7f7e201ce8e1c3a97d3_0
2025-06-23 20:04:07,514 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign({id user._id username user.username role user.role},JWT_SECRET,...);\n jwt.verify({id user._id username user.username role user.role},JWT_SECRET,...);\n JWT_SECRET jwt.sign({id user._id username user.username role user.role},"...",...);\n jwt.verify({id user._id username user.username role user.role},"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5f29a9b5fd46bbef43d42747029dd2fa825030f05e33d1266ad5b87fc74f32b3b9fde9dbba44959ff8a767e27392e0e8f955e19f9ff20eae2fe17492d45b9568_0
2025-06-23 20:04:07,515 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign({id user._id username user.username role user.role},JWT_SECRET,...);\n jwt.verify({id user._id username user.username role user.role},JWT_SECRET,...);\n JWT_SECRET jwt.sign({id user._id username user.username role user.role},"...",...);\n jwt.verify({id user._id username user.username role user.role},"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5f29a9b5fd46bbef43d42747029dd2fa825030f05e33d1266ad5b87fc74f32b3b9fde9dbba44959ff8a767e27392e0e8f955e19f9ff20eae2fe17492d45b9568_0
2025-06-23 20:04:07,516 - semgrep.rule_match - DEBUG - match_key = ('jwt = require("jsonwebtoken")\n...\n import jwt from "jsonwebtoken"\n...\n import * as jwt from "jsonwebtoken"\n...\n import {...,jwt,...} from "jsonwebtoken"\n...\n jwt.sign({id user._id username user.username role user.role},JWT_SECRET,...);\n jwt.verify({id user._id username user.username role user.role},JWT_SECRET,...);\n JWT_SECRET jwt.sign({id user._id username user.username role user.role},"...",...);\n jwt.verify({id user._id username user.username role user.role},"...",...);\n JWT_SECRET = \'your-secret-key\' \n JWT_SECRET = \'...\' \n', PosixPath('server/routes/mongoRoutes.js'), 'config..semgrep.vendored-rules.javascript.jsonwebtoken.security.hardcoded-jwt-secret') match_id = 5f29a9b5fd46bbef43d42747029dd2fa825030f05e33d1266ad5b87fc74f32b3b9fde9dbba44959ff8a767e27392e0e8f955e19f9ff20eae2fe17492d45b9568_1
2025-06-23 20:04:07,518 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:12.378771 on 112 files
2025-06-23 20:04:07,520 - semgrep.core_runner - DEBUG - findings summary: 4 warning, 0 error, 0 info
2025-06-23 20:04:07,524 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-06-23 20:04:07,524 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-06-23 20:04:07,654 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • <none>

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • <none>

  Partially analyzed due to parsing or internal Opengrep errors

   • tailwind.config.ts (1 lines skipped)

2025-06-23 20:04:07,655 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Partially scanned: 1 files only partially analyzed due to parsing or internal Opengrep errors

Ran 437 rules on 112 files: 4 findings.
2025-06-23 20:04:07,657 - semgrep.app.version - DEBUG - Version cache does not exist
2025-06-23 20:04:07,672 - semgrep.metrics - VERBOSE - Not sending pseudonymous metrics since metrics are configured to OFF and registry usage is False
